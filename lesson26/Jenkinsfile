pipeline {
    agent any

    tools {
        maven 'M3'
    }

    stages {
        
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Detect Changes') {
            steps {
                script {

                    sh 'git fetch origin main'

                    sh 'git diff --name-only FETCH_HEAD...HEAD || true'

                    changedFiles = sh(
                        script: "git diff --name-only FETCH_HEAD...HEAD",
                        returnStdout: true
                    ).trim().split("\n")
                    
                    changedApps = []
                    ['simple-java-maven-app-v1-world', 'simple-java-maven-app-v2-jenkins', 'simple-java-maven-app-v3-devops'].each { app ->
                        if (changedFiles.any { it.startsWith("lesson26/${app}/") }) {
                            changedApps << app
                        }
                    }

                    echo "Изменились приложения: ${changedApps}"
                }
            }
        }


        stage('Parallel Pipeline') {
            parallel {

                stage('v1 pipeline (hello)') {
                    when {
                        expression { return changedApps.contains('simple-java-maven-app-v1-world') }
                    }
                    stages {
                        stage('Build') {
                            steps {
                                dir('lesson26/simple-java-maven-app-v1-world') {
                                    sh 'ls -la'
                                    sh 'mvn -B -DskipTests clean package'
                                }
                            }
                        }
                        stage('Test') {
                            steps {
                                dir('lesson26/simple-java-maven-app-v1-world') {
                                    sh 'mvn test'
                                }
                            }
                            post {
                                always {
                                    junit 'lesson26/simple-java-maven-app-v1-world/target/surefire-reports/*.xml'
                                }
                            }
                        }
                        stage('Deliver') {
                            steps {
                                sh './lesson26/simple-java-maven-app-v1-world/jenkins/scripts/deliver.sh'
                            }
                        }
                    }
                }

                stage('v2 pipeline (jenkins)') {
                    when {
                        expression { return changedApps.contains('simple-java-maven-app-v2-jenkins') }
                    }
                    stages {
                        stage('Build') {
                            steps {
                                dir('lesson26/simple-java-maven-app-v2-jenkins') {
                                    sh 'mvn -B -DskipTests clean package'
                                }
                            }
                        }
                        stage('Test') {
                            steps {
                                dir('lesson26/simple-java-maven-app-v2-jenkins') {
                                    sh 'mvn test'
                                }
                            }
                            post {
                                always {
                                    junit 'lesson26/simple-java-maven-app-v2-jenkins/target/surefire-reports/*.xml'
                                }
                            }
                        }
                        stage('Deliver') {
                            steps {
                                sh './lesson26/simple-java-maven-app-v2-jenkins/jenkins/scripts/deliver.sh'
                            }
                        }
                    }
                }

                stage('v3 pipeline (devops)') {
                    when {
                        expression { return changedApps.contains('simple-java-maven-app-v3-devops') }
                    }
                    stages {
                        stage('Build') {
                            steps {
                                dir('lesson26/simple-java-maven-app-v3-devops') {
                                    sh 'mvn -B -DskipTests clean package'
                                }
                            }
                        }
                        stage('Test') {
                            steps {
                                dir('lesson26/simple-java-maven-app-v3-devops') {
                                    sh 'mvn test'
                                }
                            }
                            post {
                                always {
                                    junit 'lesson26/simple-java-maven-app-v3-devops/target/surefire-reports/*.xml'
                                }
                            }
                        }
                        stage('Deliver') {
                            steps {
                                sh './lesson26/simple-java-maven-app-v3-devops/jenkins/scripts/deliver.sh'
                            }
                        }
                    }
                }

            }
        }
    }
}
