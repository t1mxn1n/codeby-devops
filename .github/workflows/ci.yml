name: Build & Deploy to Yandex Cloud

on:
  push:
    branches:
      - final-lesson

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ github.repository_owner }}/demo-backend
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build & push backend
        run: |
          docker build -t $IMAGE_BACKEND:$TAG ./final-lesson/backend
          docker push $IMAGE_BACKEND:$TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup YC CLI
        uses: yc-actions/setup-yc@v1
        with:
          yc-token: ${{ secrets.YC_TOKEN }}
          yc-cloud-id: ${{ secrets.YC_CLOUD_ID }}
          yc-folder-id: ${{ secrets.YC_FOLDER_ID }}

      - name: Get Kubeconfig
        run: yc managed-kubernetes cluster get-credentials demo-cluster --external --force

      - name: Ensure namespace exists
        run: kubectl apply -f ./final-lesson/k8s/namespace.yml

      - name: Create GHCR secret in cluster
        run: |
          kubectl delete secret ghcr-creds -n demo --ignore-not-found
          kubectl create secret docker-registry ghcr-creds \
            --docker-server=ghcr.io \
            --docker-username=${{ secrets.GHCR_USERNAME }} \
            --docker-password=${{ secrets.GHCR_TOKEN }} \
            --namespace=demo

      - name: Deploy all manifests
        run: |
          kubectl apply -k ./final-lesson/k8s/postgres
          kubectl apply -k ./final-lesson/k8s/api
          kubectl apply -k ./final-lesson/k8s/monitoring --server-side=true
